import{_ as a,c as s,o as e,af as n}from"./chunks/framework.BMktmvug.js";const u=JSON.parse('{"title":"Installation Guide","description":"","frontmatter":{},"headers":[],"relativePath":"docs/installation/index.md","filePath":"docs/installation/index.md"}'),t={name:"docs/installation/index.md"};function l(r,i,o,p,h,d){return e(),s("div",null,i[0]||(i[0]=[n(`<h1 id="installation-guide" tabindex="-1">Installation Guide <a class="header-anchor" href="#installation-guide" aria-label="Permalink to &quot;Installation Guide&quot;">​</a></h1><p>Chaterm offers multiple installation options to suit different development environments and user preferences. This guide outlines all available methods for setting up Chaterm on your system, whether you are a developer contributing to the project or an end user looking to use the application.</p><h2 id="requirements" tabindex="-1">Requirements <a class="header-anchor" href="#requirements" aria-label="Permalink to &quot;Requirements&quot;">​</a></h2><p>Before installing Chaterm, make sure your system meets the following requirements:</p><h3 id="operating-system" tabindex="-1">Operating System: <a class="header-anchor" href="#operating-system" aria-label="Permalink to &quot;Operating System:&quot;">​</a></h3><ul><li>Windows 10/11</li><li>macOS 10.15 (Catalina) or later (Intel and Apple Silicon supported)</li><li>Linux (Debian/Ubuntu based distributions and other distributions that support AppImage)</li></ul><h3 id="hardware" tabindex="-1">Hardware: <a class="header-anchor" href="#hardware" aria-label="Permalink to &quot;Hardware:&quot;">​</a></h3><ul><li>Minimum 4GB RAM (8GB recommended)</li><li>1GB available storage space</li></ul><h3 id="development-requirements-for-developers-only" tabindex="-1">Development Requirements (for developers only): <a class="header-anchor" href="#development-requirements-for-developers-only" aria-label="Permalink to &quot;Development Requirements (for developers only):&quot;">​</a></h3><ul><li>Node.js 16.x or later</li><li>npm 7.x or later</li></ul><h2 id="download-and-install" tabindex="-1">Download and Install <a class="header-anchor" href="#download-and-install" aria-label="Permalink to &quot;Download and Install&quot;">​</a></h2><p>Chaterm is distributed in different formats depending on your operating system. Please select the appropriate method below.</p><h3 id="windows-installation" tabindex="-1">Windows Installation <a class="header-anchor" href="#windows-installation" aria-label="Permalink to &quot;Windows Installation&quot;">​</a></h3><p>Windows users can install Chaterm using the NSIS installer:</p><ol><li><p>Download the latest <strong>Chaterm-[version]-setup.exe</strong> from the official releases page</p></li><li><p>Run the installer and follow the on-screen instructions</p></li><li><p>Chaterm creates a desktop shortcut by default for easy access Source: electron-builder.yml#L37-L41</p></li></ol><h3 id="macos-installation" tabindex="-1">macOS Installation <a class="header-anchor" href="#macos-installation" aria-label="Permalink to &quot;macOS Installation&quot;">​</a></h3><p>macOS users have two installation options:</p><ol><li><strong>DMG Installation</strong> (Recommended):</li></ol><ul><li><p>Download the appropriate <strong>chaterm-[version]-[architecture].dmg</strong> file for your architecture (x64 for Intel Macs, arm64 for Apple Silicon)</p></li><li><p>Open the DMG file</p></li><li><p>Drag the Chaterm application into your Applications folder</p></li></ul><ol start="2"><li><strong>ZIP Installation</strong>:</li></ol><ul><li>Download the chaterm-[version]-[architecture].zip file for your architecture</li><li>Unzip the ZIP file</li><li>Move the unzipped Chaterm application into your Applications folder</li></ul><h3 id="linux-installation" tabindex="-1">Linux Installation <a class="header-anchor" href="#linux-installation" aria-label="Permalink to &quot;Linux Installation&quot;">​</a></h3><p>Linux users have two installation options:</p><ol><li><strong>AppImage</strong> (Generic):</li></ol><ul><li>Download the <strong>chaterm-[version]-[architecture].AppImage</strong> file</li><li>Make it executable using the following command: <strong>chmod +x chaterm-[version]-[architecture].AppImage</strong></li><li>Run directly: ./chaterm-[version]-[architecture].AppImage</li></ul><ol start="2"><li><strong>Debian/Ubuntu Package</strong>:</li></ol><ul><li>Download the <strong>chaterm-[version]-[architecture].deb</strong> file</li><li>Install using the following command: <strong>sudo dpkg -i chaterm-[version]-[architecture].deb</strong> or install via your package manager</li></ul><h2 id="install-from-source" tabindex="-1">Install from source <a class="header-anchor" href="#install-from-source" aria-label="Permalink to &quot;Install from source&quot;">​</a></h2><h3 id="setting-up-the-environment" tabindex="-1">Setting up the environment <a class="header-anchor" href="#setting-up-the-environment" aria-label="Permalink to &quot;Setting up the environment&quot;">​</a></h3><h4 id="_1-clone-the-repository" tabindex="-1">1. Clone the repository: <a class="header-anchor" href="#_1-clone-the-repository" aria-label="Permalink to &quot;1. Clone the repository:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/chaterm/Chaterm.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Chaterm</span></span></code></pre></div><h4 id="_2-configure-npm" tabindex="-1">2. Configure npm: <a class="header-anchor" href="#_2-configure-npm" aria-label="Permalink to &quot;2. Configure npm:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Update npm registry</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> registry</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://registry.npmmirror.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Edit npm configuration</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add the following lines to the end of the file:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">electron_mirror</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://cdn.npmmirror.com/binaries/electron/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">electron_builder_binaries_mirror</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">https://npmmirror.com/mirrors/electron-builder-binaries/</span></span></code></pre></div><h4 id="_3-install-dependencies" tabindex="-1">3. Install dependencies: <a class="header-anchor" href="#_3-install-dependencies" aria-label="Permalink to &quot;3. Install dependencies:&quot;">​</a></h4><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> scripts/patch-package-lock.js</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><h3 id="source-build" tabindex="-1">Source build <a class="header-anchor" href="#source-build" aria-label="Permalink to &quot;Source build&quot;">​</a></h3><p>You can build Chaterm from source for any supported platform:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:win</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For macOS</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:mac</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># For Linux</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:linux</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Unpacked build (for testing)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build:unpack</span></span></code></pre></div><h2 id="custom-build" tabindex="-1">Custom build <a class="header-anchor" href="#custom-build" aria-label="Permalink to &quot;Custom build&quot;">​</a></h2><p>Advanced developers can modify <strong>electron-builder.yml</strong> file to customize the build process. This configuration controls:</p><ul><li>File inclusion/exclusion rules</li><li>Application metadata</li><li>Platform-specific settings</li><li>Packaging format</li><li>Resource handling</li></ul><p>For example, you can customize:</p><ul><li>Change icon files by replacing resources/icon.ico and resources/icon.icns</li><li>Application name and identifier</li><li>File compression settings</li><li>Target architecture for each platform</li></ul>`,43)]))}const k=a(t,[["render",l]]);export{u as __pageData,k as default};
